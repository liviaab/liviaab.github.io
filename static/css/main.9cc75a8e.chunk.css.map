{"version":3,"sources":["/media/livia/CommonData/Repos/page/src/components/pages/landing/Landing.scss","/media/livia/CommonData/Repos/page/src/assets/stylesheets/media_queries.scss","/media/livia/CommonData/Repos/page/src/assets/stylesheets/colors.scss","/media/livia/CommonData/Repos/page/src/assets/stylesheets/mixins.scss","/media/livia/CommonData/Repos/page/src/components/templates/main/MainTemplate.scss"],"names":[],"mappings":"AAIA,SACE,WAAA,AACA,WAAA,CAAY,AAFd,iBAKI,mFAAA,AACA,UAAA,CAAW,AC2BX,yBDjCJ,iBASM,WAAA,CAAY,CAUf,ACgCC,+CDnDJ,iBAaM,WAAA,CAAY,CAMf,ACHC,yBDhBJ,iBAiBM,WAAA,CAAY,CAEf,AAnBH,sBAsBI,WAAA,CAAY,AAtBhB,oCAyBM,kBAAA,AACA,gBAAA,AACA,qBAAA,CE/Be,ADqCjB,yBDjCJ,sBA+BM,UAAA,AACA,UAAA,CAAW,CAYd,ACOC,+CDnDJ,sBAoCM,UAAA,AACA,UAAA,CAAW,CAOd,AC5BC,yBDhBJ,sBAyCM,UAAA,AACA,UAAA,CAAW,CAEd,AA5CH,sBA+CI,kBAAA,AACA,WAAA,AGnDF,aAAA,AACA,iBAAA,AACA,uBAAA,AACA,kBAAA,CAJsF,AFqCpF,yBDjCJ,mCAqDQ,aAAA,CAAc,CAUjB,ACZD,+CDnDJ,mCAyDQ,UAAA,CAAe,CAMlB,AC/CD,yBDhBJ,mCA6DQ,aAAA,CAAc,CAEjB,AA/DL,gCGHE,aAAA,AACA,mBAAA,AACA,6BAAA,AACA,kBAAA,CAJsF,AFqCpF,yBDjCJ,gCAoEQ,SAAA,CAAU,CAUb,AC3BD,+CDnDJ,gCAwEQ,SAAA,CAAU,CAMb,AC9DD,yBDhBJ,gCA4EQ,SAAA,CAAU,CAEb,AIhFL,eACE,qBAAA,CFHmB","file":"main.9cc75a8e.chunk.css","sourcesContent":["@import \"../../../assets/stylesheets/colors.scss\";\n@import \"../../../assets/stylesheets/media_queries.scss\";\n@import \"../../../assets/stylesheets/mixins.scss\";\n\n.landing {\n  width: 100%;\n  height: 100%;\n\n  >.header {\n    background: url(\"../../../assets/images/pexels-photo-949587.jpeg\") no-repeat center;\n    width: 100%;\n\n    @include respond-below(sm) {\n      height: 30vh;\n    }\n\n    @include respond-between(sm, md){\n      height: 25vh;\n    }\n\n    @include respond-above(md){\n      height: 25vh;\n    }\n  }\n\n  >.round-image {\n    margin: auto;\n\n    >.round-border {\n      border-radius: 50%;\n      margin-top: -50%;\n      border: 5px solid $color-white;\n    }\n\n    @include respond-below(sm) {\n      width: 40%;\n      height: 40%;\n    }\n\n    @include respond-between(sm, md){\n      width: 25%;\n      height: 25%;\n    }\n\n    @include respond-above(md){\n      width: 20%;\n      height: 20%;\n    }\n  }\n\n  >.information {\n    text-align: center;\n    margin: 5vh;\n    @include flex-display($flex-flow: column);\n\n    >.description {\n      @include respond-below(sm) {\n        margin: 10% 5%;\n      }\n\n      @include respond-between(sm, md){\n        margin: 10% 10%;\n      }\n\n      @include respond-above(md){\n        margin: 5% 20%;\n      }\n    }\n\n    >.contacts {\n      @include flex-display($justify-content: space-evenly);\n      @include respond-below(sm) {\n        width: 50%;\n      }\n\n      @include respond-between(sm, md){\n        width: 30%;\n      }\n\n      @include respond-above(md){\n        width: 30%;\n      }\n    }\n  }\n}\n","//from https://glennmccomb.com/articles/useful-sass-scss-media-query-mixins-for-bootstrap/\n//\n//  MEDIA QUERIES\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n$breakpoints: (\n  xs: 576px,\n  sm: 768px,\n  md: 992px,\n  lg: 1200px\n);\n\n//\n//  RESPOND ABOVE\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n@mixin respond-above($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\n\n    @media (min-width: $breakpoint-value) {\n      @content;\n    }\n  } @else {\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\n  }\n}\n\n//\n//  RESPOND BELOW\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n// @include respond-below(sm) {}\n@mixin respond-below($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\n\n    @media (max-width: ($breakpoint-value - 1)) {\n      @content;\n    }\n\n  } @else {\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\n  }\n}\n\n\n//\n//  RESPOND BETWEEN\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n@mixin respond-between($lower, $upper) {\n  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\n    $lower-breakpoint: map-get($breakpoints, $lower);\n    $upper-breakpoint: map-get($breakpoints, $upper);\n\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\n      @content;\n    }\n  } @else {\n    @if (map-has-key($breakpoints, $lower) == false) {\n      @warn 'Your lower breakpoint was invalid: #{$lower}.';\n    }\n\n    @if (map-has-key($breakpoints, $upper) == false) {\n      @warn 'Your upper breakpoint was invalid: #{$upper}.';\n    }\n  }\n}\n","$color-white: #ffffff;\n$color-tuna: #3B3D40;\n","@mixin flex-display($flex-flow: row wrap, $justify-content: center, $align-items: center) {\n  display: flex;\n  flex-flow: $flex-flow;\n  justify-content: $justify-content;\n  align-items: $align-items\n}\n","@import \"../../../assets/stylesheets/colors.scss\";\n\n#main-template{\n  background-color: $color-white;\n}\n"]}