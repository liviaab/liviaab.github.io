{"version":3,"sources":["assets/images/me.jpg","serviceWorker.js","components/pages/home/Home.jsx","components/pages/landing/Landing.jsx","components/templates/index.js","components/templates/main/MainTemplate.jsx","Routes.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Component","Landing","react_default","a","createElement","id","className","src","liviaPhoto","alt","index_esm","color","size","MainTemplate","_ref","children","withMainTemplate","component","props","templates","Routes","react_router","exact","path","pages_landing_Landing","Projects_default","Extras_default","App","react_router_dom","basename","src_Routes","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+MCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,6ICfaC,4CCoCJC,mLA7BX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAGfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,IAAYC,IAAI,QAAQH,UAAU,WAI9CJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAf,4BACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,iJAGGJ,EAAAC,EAAAC,cAAA,WAHH,2CAMAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,MAAM,UAAUC,KAAK,QACjCV,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAcC,MAAM,UAAUC,KAAK,QACnCV,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAcC,MAAM,UAAUC,KAAK,kBAvBzBZ,8BCNPa,SCCM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACnBb,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBAELU,KCDCC,EAAmB,SAACC,EAAWC,GAAZ,OACvBhB,EAAAC,EAAAC,cAACe,EAAiBD,EACfD,IAgBUG,EAZA,kBACXlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACInB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIN,UAAW,SAAAC,GAAK,OAAIF,EAAiBd,EAAAC,EAAAC,cAACoB,EAAYN,OAD5E,MAEOhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYN,UAAW,SAAAC,GAAK,OAAIF,EAAiBd,EAAAC,EAAAC,cAACqB,EAAAtB,EAAae,OAFxF,MAGOhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUN,UAAW,SAAAC,GAAK,OAAIF,EAAiBd,EAAAC,EAAAC,cAACsB,EAAAvB,EAAWe,SCJzES,EANH,kBACVzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAeC,SAAS,SACtB3B,EAAAC,EAAAC,cAAC0B,EAAD,QCDJC,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe,SP2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e3dc0f30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.2ff026b9.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\nimport './Home.scss'\n\nclass Home extends Component {\n  render() {\n    return(\n      <div> Livia </div>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { FaFacebookSquare as FacebookIcon,\n  FaGithub as GithubIcon,\n  FaLinkedin as LinkedinIcon\n } from \"react-icons/fa\";\nimport './Landing.scss'\nimport liviaPhoto from '../../../assets/images/me.jpg'\n\nclass Landing extends Component {\n  render() {\n    return(\n      <div id=\"landing\">\n        <div className=\"header\">\n        </div>\n\n        <div className=\"round-image\">\n          <img src={liviaPhoto} alt=\"Livia\" className=\"round\" />\n          {/*https://www.pexels.com/*/}\n        </div>\n\n        <div className=\"information\">\n          <div className=\"identification\">Lívia Almeida Barbosa</div>\n          <div className=\"description\">\n            Graduada em Ciência da Computação pela UFMG,\n             desenvolvedora full-stack que quer se desafiar cada vez mais a sair da zona de conforto.\n             <br />\n             Jogadora de vôlei nas horas vagas :)\n          </div>\n          <div className=\"contacts\">\n            <GithubIcon color=\"#3B3D40\" size=\"2em\" />\n            <LinkedinIcon color=\"#3B3D40\" size=\"2em\" />\n            <FacebookIcon color=\"#3B3D40\" size=\"2em\" />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing\n","import MainTemplate from './main/MainTemplate'\n\nexport default MainTemplate\n","import React, { Component } from 'react'\nimport './MainTemplate.scss'\n\nconst MainTemplate = ({ children }) => (\n  <div id='main-template'>\n\n    {children}\n  </div>\n)\n\nexport default MainTemplate\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Home, Landing, Projects, Extras } from './components/pages'\nimport MainTemplate from './components/templates'\n\nconst withMainTemplate = (component, props) =>  (\n  <MainTemplate {...props}>\n    {component}\n  </MainTemplate>\n)\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={props => withMainTemplate(<Landing {...props} />)} />\n        // <Route exact path=\"/projects\" component={props => withMainTemplate(<Projects {...props} />)} />\n        // <Route exact path=\"/extras\" component={props => withMainTemplate(<Extras {...props} />)} />\n    </Switch>\n)\n\n\n\n\n\nexport default Routes\n","import React, { Component, Fragment } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport Routes from './Routes'\n\nconst App = () => (\n  <BrowserRouter basename=\"/page\" >\n    <Routes />\n  </BrowserRouter>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\nimport App from './App.jsx'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}